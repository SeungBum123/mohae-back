name: CI / CD Docker

on:
  push:
    branches: [ "main" ]
env:
  DOCKER_IMAGE: ghcr.io/Yonghoon-Jung/nest-github-actions
  VERSION: ${{ github.sha }}

jobs:
  build:
      name: Build
      runs-on: ubuntu-latest
      steps:
        - name: Check out source code
          uses: actions/checkout@v2
        - name: Set up docker buildx
          id: buildx
          uses: docker/setup-buildx-action@v1
        - name: Cache docker layers
          uses: actions/cache@v2
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ env.VERSION }} # runner 설정에서 읽어들일거에요.
            restore-keys: |
              ${{ runner.os }}-buildx-
        - name: Login to ghcr
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.CR_PAT }}
#         - name: Build and push
#           id: docker_build
#           uses: docker/build-push-action@v2
#           with:
#             context: .
#             builder: ${{ steps.buildx.outputs.name }}
#             push: ${{ github.event_name != 'pull_request' }}
#             tags: hoonloper/github-acitons-docker:0.0.1
    
#         - name: Docker Run
#           run: |
#              docker login -u ${{ secrets.USERNAME }} -p ${{ secrets.PASSWORD }}
#              docker pull hoonloper/github-acitons-docker:0.0.1
#              docker run -d -p 80:8080 hoonloper/github-acitons-docker:0.0.1
        - name: Run scripts in server
          uses: appleboy/ssh-action@master
          with:
            key: ${{ secrets.SERVER_KEY }}
            host: ${{ secrets.SERVER_HOST }}
            username: ${{ secrets.SERVER_USER }}
            script: |
              pwd
              ls
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - name: npm install and build
#       run: |
#         npm install
#         npm run build
#     - uses: actions/upload-artifact@master
#       with:
#         name: webpack artifacts
#         path: public/

#   test:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         os: [ubuntu-latest, windows-2016]
#         node-version: [12.x, 14.x, 16.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v3
#     - uses: actions/upload-artifact@master
#       with:
#         name: webpack artifacts
#         path: public
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - name: npm install and build
#       run: |
#         npm install
#         npm test
#       env:
#         CI: true
